{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jackk\\\\OneDrive\\\\AzureBillingApp\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [resources, setResources] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Use an environment variable for the API base URL.\n  // For development, set REACT_APP_API_URL to \"http://localhost:8000\"\n  // For production, set it to the actual backend URL.\n  const API_URL = process.env.REACT_APP_API_URL || \"\";\n  useEffect(() => {\n    fetch(`${API_URL}/check-resources`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => setResources(data)).catch(err => setError(err.toString()));\n  }, [API_URL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), resources ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(resources, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading resources...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"4Ka/LqAKW2MCzesRAOcM4YcInsM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","resources","setResources","error","setError","API_URL","process","env","REACT_APP_API_URL","fetch","then","response","ok","Error","status","json","data","catch","err","toString","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/jackk/OneDrive/AzureBillingApp/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Dashboard() {\n  const [resources, setResources] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Use an environment variable for the API base URL.\n  // For development, set REACT_APP_API_URL to \"http://localhost:8000\"\n  // For production, set it to the actual backend URL.\n  const API_URL = process.env.REACT_APP_API_URL || \"\";\n\n  useEffect(() => {\n    fetch(`${API_URL}/check-resources`)\n      .then((response) => {\n         if (!response.ok) {\n             throw new Error(`HTTP error! Status: ${response.status}`);\n         }\n         return response.json();\n      })\n      .then((data) => setResources(data))\n      .catch((err) => setError(err.toString()));\n  }, [API_URL]);\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Dashboard</h1>\n      {error && <div style={{ color: 'red' }}>Error: {error}</div>}\n      {resources ? (\n        <pre>{JSON.stringify(resources, null, 2)}</pre>\n      ) : (\n        <div>Loading resources...</div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA;EACA;EACA,MAAMS,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,EAAE;EAEnDb,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,GAAGJ,OAAO,kBAAkB,CAAC,CAChCK,IAAI,CAAEC,QAAQ,IAAK;MACjB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACzB,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAKd,YAAY,CAACc,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,GAAG,IAAKd,QAAQ,CAACc,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACd,OAAO,CAAC,CAAC;EAEb,oBACEP,OAAA;IAAKsB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BxB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBvB,KAAK,iBAAIL,OAAA;MAAKsB,KAAK,EAAE;QAAEO,KAAK,EAAE;MAAM,CAAE;MAAAL,QAAA,GAAC,SAAO,EAACnB,KAAK;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3DzB,SAAS,gBACRH,OAAA;MAAAwB,QAAA,EAAMM,IAAI,CAACC,SAAS,CAAC5B,SAAS,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAE/C5B,OAAA;MAAAwB,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAC/B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAhCQD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAkClB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}